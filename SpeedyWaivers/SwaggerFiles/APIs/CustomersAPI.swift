//
// CustomersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class CustomersAPI {
    /**

     - parameter customerId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func customersGetCustomer(customerId: Int, completion: @escaping ((_ data: Customer?,_ error: Error?) -> Void)) {
        customersGetCustomerWithRequestBuilder(customerId: customerId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /Customers/{customerId}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "zip" : "zip",
  "lastName" : "lastName",
  "publicCustomerId" : "publicCustomerId",
  "address2" : "address2",
  "city" : "city",
  "address1" : "address1",
  "mobileNumber" : "mobileNumber",
  "birthDate" : "2000-01-23T04:56:07.000+00:00",
  "firstName" : "firstName",
  "emailAddress" : "emailAddress",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "venueId" : 6,
  "customerId" : 0,
  "state" : "state"
}}]
     
     - parameter customerId: (path)  

     - returns: RequestBuilder<Customer> 
     */
    open class func customersGetCustomerWithRequestBuilder(customerId: Int) -> RequestBuilder<Customer> {
        var path = "/Customers/{customerId}"
        let customerIdPreEscape = "\(customerId)"
        let customerIdPostEscape = customerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{customerId}", with: customerIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Customer>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func customersGetCustomers(completion: @escaping ((_ data: [Customer]?,_ error: Error?) -> Void)) {
        customersGetCustomersWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /Customers
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example=[ {
  "zip" : "zip",
  "lastName" : "lastName",
  "publicCustomerId" : "publicCustomerId",
  "address2" : "address2",
  "city" : "city",
  "address1" : "address1",
  "mobileNumber" : "mobileNumber",
  "birthDate" : "2000-01-23T04:56:07.000+00:00",
  "firstName" : "firstName",
  "emailAddress" : "emailAddress",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "venueId" : 6,
  "customerId" : 0,
  "state" : "state"
}, {
  "zip" : "zip",
  "lastName" : "lastName",
  "publicCustomerId" : "publicCustomerId",
  "address2" : "address2",
  "city" : "city",
  "address1" : "address1",
  "mobileNumber" : "mobileNumber",
  "birthDate" : "2000-01-23T04:56:07.000+00:00",
  "firstName" : "firstName",
  "emailAddress" : "emailAddress",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "venueId" : 6,
  "customerId" : 0,
  "state" : "state"
} ]}]

     - returns: RequestBuilder<[Customer]> 
     */
    open class func customersGetCustomersWithRequestBuilder() -> RequestBuilder<[Customer]> {
        let path = "/Customers"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Customer]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter customer: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func customersPostCustomer(customer: CustomerRequest, completion: @escaping ((_ data: Customer?,_ error: Error?) -> Void)) {
        customersPostCustomerWithRequestBuilder(customer: customer).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /Customers
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "zip" : "zip",
  "lastName" : "lastName",
  "publicCustomerId" : "publicCustomerId",
  "address2" : "address2",
  "city" : "city",
  "address1" : "address1",
  "mobileNumber" : "mobileNumber",
  "birthDate" : "2000-01-23T04:56:07.000+00:00",
  "firstName" : "firstName",
  "emailAddress" : "emailAddress",
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "venueId" : 6,
  "customerId" : 0,
  "state" : "state"
}}]
     
     - parameter customer: (body)  

     - returns: RequestBuilder<Customer> 
     */
    open class func customersPostCustomerWithRequestBuilder(customer: CustomerRequest) -> RequestBuilder<Customer> {
        let path = "/Customers"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: customer)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Customer>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
